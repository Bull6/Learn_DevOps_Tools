version: '3'
services:
  
  NGINX:
    image: nginx:latest
    container_name: nginx
    hostname: nginx
    depends_on:
      - pgadmin
    ports:
      - 80:80
    volumes:
      - ./nginx/:/etc/nginx/conf.d/
      - ./logs/nginx:/var/log/nginx
    restart: always
    networks:
      - test

  postgres:
    image: postgres
    container_name: postgres
    hostname: postgres
    ports: 
      - "5432:5432"
    environment:
      POSTGRES_USER: test
      POSTGRES_PASSWORD: 123456
      POSTGRES_DB: testDB
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - ./PG_data/:/var/lib/postgresql/data
    restart: always
    networks:
      - test

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    hostname: pgadmin
    links:
      - postgres:db
    environment:
      POSTGRES_USER: test
      POSTGRES_PASSWORD: 123456
      POSTGRES_DB: testDB
      PGADMIN_DEFAULT_EMAIL: 'postgres@pg.com'
      PGADMIN_DEFAULT_PASSWORD: 'postgres'
    ports:
     - "5050:80"
    depends_on:
      - postgres
    restart: always
    networks:
      - test
    
  prometheus:
    image: bitnami/prometheus
    container_name: prometheus
    hostname: prometheus
    volumes:
      - ./prometheus-config/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    links:
      - postgres:db
    ports:
      - 9090:9090
    restart: always
    depends_on:
      - postgres
    networks:
      - test
  
  postgres-exporter:
    image: prometheuscommunity/postgres-exporter
    container_name: postgres-exporter
    hostname: postgres-exporter
    ports:
      - 9187:9187
    environment:
      DATA_SOURCE_NAME: "postgresql://test:123456@postgres:5432/testDB?sslmode=disable"
    links:
      - postgres
      - prometheus
    networks:
      - test
  
  grafana:
    image: grafana/grafana
    container_name: grafana
    hostname: grafana
    ports:
      - 3000:3000
    volumes:
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
    depends_on:
      - prometheus
    networks:
      - test



networks:
  test:
    external: true