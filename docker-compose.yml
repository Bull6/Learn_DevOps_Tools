version: '3'
services:
  
  NGINX:
    image: nginx
    container_name: nginx
    hostname: nginx
    depends_on:
      - pgadmin
    ports:
      - 80:80
    volumes:
      - ./nginx/:/etc/nginx/conf.d/
      - ./logs/nginx:/var/log/nginx
    restart: always
    networks:
      - test

  postgres:
    image: postgres
    container_name: postgres
    hostname: postgres
    ports: 
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRESQL_USER}
      POSTGRES_PASSWORD: ${POSTGRESQL_PASS}
      POSTGRES_DB: ${POSTGRESQL_DB}
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - ./PG_data/:/var/lib/postgresql/data
    restart: always
    networks:
      - test

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    hostname: pgadmin
    links:
      - postgres:db
    environment:
      POSTGRES_USER: ${POSTGRESQL_USER}
      POSTGRES_PASSWORD: ${POSTGRESQL_PASS}
      POSTGRES_DB: ${POSTGRESQL_DB}
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_USER}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASS}
    volumes:
      - ./pgadmin:/var/lib/pgadmin
    ports:
     - "5050:80"
    depends_on:
      - postgres
    restart: always
    networks:
      - test
    
  prometheus:
    image: bitnami/prometheus
    container_name: prometheus
    hostname: prometheus
    volumes:
      - ./prometheus-config/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    links:
      - postgres:db
    ports:
      - 9090:9090
    restart: always
    depends_on:
      - postgres
    networks:
      - test
  
  postgres-exporter:
    image: prometheuscommunity/postgres-exporter
    container_name: postgres-exporter
    hostname: postgres-exporter
    ports:
      - 9187:9187
    environment:
      DATA_SOURCE_NAME: ${EXPORTER_DATASOURCE}
    links:
      - postgres
      - prometheus
    networks:
      - test
  
  grafana:
    image: grafana/grafana
    container_name: grafana
    hostname: grafana
    ports:
      - 3000:3000
    volumes:
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/lib:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - test
    
  keycloak:
    image: jboss/keycloak:${KEYCLOAK_VERSION}
    container_name: keycloak
    environment:
      PROXY_ADDRESS_FORWARDING: true
      DB_VENDOR: postgres
      DB_ADDR: postgres
      DB_DATABASE: ${POSTGRESQL_DB}
      DB_USER: ${POSTGRESQL_USER}
      DB_PASSWORD: ${POSTGRESQL_PASS}
      KEYCLOAK_USER: ${KEYCLOAK_USER}
      KEYCLOAK_PASSWORD: ${KEYCLOAK_PASSWORD}
    ports:
      - "8087:8080"
    # volumes:
    #   - ./keycloak/standalone.xml:/opt/jboss/keycloak/standalone/configuration/standalone.xml
    restart: unless-stopped
    depends_on:
      - postgres
    networks:
      - test



networks:
  test:
    external: true